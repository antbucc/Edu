entity Scenario {
	title String
    description String
    language Language
}


entity Module {
	title String
	description String
	startDate Instant
	endData Instant
    level Level
}


entity Learner {
	
	firstName String
	lastName String
	email String
	phoneNumber String
    gender GenderType
}

entity LearningDisability {
  name String
  description String
  disabilityType DisabilityType
}

entity Educator {
	firstName String
	lastName String
	email String
}

entity Domain {
	title String
    description String
    city String
}

entity Competence {
 title String
 description String
 type CompetenceType
}

entity Concept {
 title String
 description String
}

entity Activity {
title String
description String
type ActivityType
tool Tool
difficulty Difficulty
}



entity Precondition{
 title String
}

entity Effect{
 title String
}



entity Goal {
 title String required
}



entity Fragment {
 title String required
 order Integer required
}

entity Sequence {
  title String required
}



entity SetOf {
 title String required
 atLeast Integer
 noLess Integer
}

entity Order {
  order Integer required
}


entity AbstractActivity {
 title String required
}



entity EducatorPreference {
  subject String
  difficulty Difficulty
}

entity PreferredTopic {
  topicId Long,
  topic String,
}

entity PreferredActivity {
  activity ActivityType,
}

entity PreferredModality {
  modality ModalityType,
}

entity PreferredLearningStyle {
  style LearningStyleType,
}

enum ActivityType {
  LECTURE
  DISCUSSION
  HANDS_ON
  EXERCISES
  PROJECT
}

enum ModalityType {
  ONLINE
  IN_PERSON
  BLENDED
}


enum Tool {
 COMPUTER, MOBILE
}

enum ActivityType {
INDIVIDUAL, GROUP
}


enum Difficulty {
LOW, MODERATE, INTERMEDIATE, HIGH, ADVANCED, PERSONALIZED
}

enum Language {
     ENGLISH, ITALIAN
}
enum Level {
     BEGINNER, INTERMEDIATE, ADVANCED
}

enum CompetenceType {
SKILL, KNOWLEDGE, ATTITUDE
}

enum GenderType {
  MALE
  FEMALE
  OTHER
}



enum DisabilityType {
  DYSLEXIA
  DYSCALCULIA
  DYSGRAPHIA
  ADHD
  APD
  VISUAL_PROCESSING
  LANGUAGE_PROCESSING
  // Add more specific learning disability types as needed
}


enum ModalityType {
  ONLINE
  IN_PERSON
  BLENDED
}

enum LearningStyleType {
  VISUAL
  AUDITORY
  HANDS_ONE
  SOCIAL
  VERBAL
  LOGICAL
}






relationship OneToMany {
  Scenario { Module(title) } to  Module { Scenario(title) } 
}


relationship OneToMany {
  Module { Fragment(title) } to  Fragment { Module(title) } 
}



relationship OneToMany {
  Domain {Scenario(title)} to  Scenario { Domain(title) } 
}

relationship ManyToMany {
  Scenario { Educator(lastName) } to Educator{Scenario(title)}
}

relationship ManyToMany {
  Scenario { Competence(title) } to Competence{Scenario(title)}
}

relationship ManyToMany {
  Competence { Concept(title) } to Concept { Competence(title) }
}

relationship ManyToMany {
  Scenario { Learner(lastName) } to Learner{ Scenario(title) }
}


relationship ManyToMany {
  Activity { Concept(title) } to Concept{ Activity(title) }
}



relationship ManyToMany {
 Activity { Precondition(title) } to Precondition{ Activity(title) }
}

relationship ManyToMany {
Activity { Effect(title) } to Effect{ Activity(title) }
}



relationship ManyToMany {
  Goal{ Concept(title) } to Concept{ Goal(title) }
}


relationship ManyToMany {
  Precondition{ Concept(title) } to Concept{ Precondition(title) }
}

relationship ManyToMany {
  Effect{ Concept(title) } to Concept{ Effect(title) }
}

relationship OneToMany {
  Concept{parent} to Concept{childs}
}


relationship OneToOne {
Fragment{ Activity(title) } to Activity{ Fragment(title) } 
}



relationship OneToOne {
Fragment{ AbstractActivity(title) } to AbstractActivity{ Fragment(title) } 
}


relationship OneToOne {
  Fragment{ setOf(title) } to SetOf{fragment1}
}

relationship ManyToMany {
  SetOf{ fragments(title) } to Fragment{setOf1},
}



relationship ManyToOne {
 Fragment{ Sequence(title) } to Sequence{ Fragment(title) } 
}


relationship ManyToMany {
  AbstractActivity{ Goal(title) } to Goal{ AbstractActivity(title) }
}

relationship ManyToOne {
 Order{ Fragment(title) } to Fragment
}


relationship OneToMany {
  Sequence{ Order(order) } to Order{ Sequence(title) }
}


relationship OneToMany {
  Learner{disabilities} to LearningDisability{learnarDisabilities}
  Educator{preferences} to EducatorPreference{eductarPreferences}
  EducatorPreference{preferredTopics} to PreferredTopic{educatorPreference}
  EducatorPreference{preferredActivities} to PreferredActivity{educatorPreference}
  EducatorPreference{preferredModalities} to PreferredModality{educatorPreference}
  EducatorPreference{preferredLearningStyles} to PreferredLearningStyle{educatorPreference}
}


// Set pagination options
paginate Learner, Educator with infinite-scroll
paginate Domain, Scenario with pagination

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Fragment

// Set an angular suffix
// angularSuffix * with mySuffix
